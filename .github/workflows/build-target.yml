name: Build and Release Game

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  createRelease:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    
    # Step 1: Create GitHub Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: "Release ${{ github.ref_name }}"
        draft: false
        prerelease: false
  
  buildTarget:
    name: Build for ${{ matrix.targetPlatform }}
    needs: createRelease
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    steps:
      # Step 1: Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # Step 2: Cache Unity Library for faster builds
      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-

      # Step 3: Build the project using GameCI
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildsPath: ./builds
          
      # Step 4: Upload artifact ke GitHub Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.createRelease.outputs.upload_url }}
          asset_path: ./builds/${{ matrix.targetPlatform }}.zip
          asset_name: KitchenChaos-${{ matrix.targetPlatform }}-v${{ github.ref_name }}.zip
          asset_content_type: application/zip