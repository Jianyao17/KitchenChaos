name: Build and Release Game

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  buildForAllTargetedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    steps:
      # Step 1: Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # Step 2: Cache Unity Library for faster builds
      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-

      # Step 3: Build the project using GameCI
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      # Step 4: Upload build artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  release:
    name: Create GitHub Release
    needs: buildForAllTargetedPlatforms
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Download build artifacts for all platforms
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-builds

      # Step 3: Create a GitHub release with artifacts
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: release-builds/**
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Build for multiple platforms:
            - Windows
          draft: false
          prerelease: false
