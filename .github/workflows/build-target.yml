name: Build and Release Game

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  buildForAllTargetedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    steps:
      # Step 1: Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # Step 2: Cache Unity Library for faster builds
      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-

      # Step 3: Build the project using GameCI
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      # Step 4: Upload build artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
          retention-days: 7

  release:
    name: Release Unity Game
    needs: buildForAllTargetedPlatforms
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Download build artifact
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: unity-build
          path: ./artifact-build
      
      # Step 2: Create GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} 
          release_name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
      
      # Step 3: Upload artifact ke GitHub Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact-build/**
          asset_name: KitchenChaos-v${{ github.ref_name }}
          asset_content_type: application/zip